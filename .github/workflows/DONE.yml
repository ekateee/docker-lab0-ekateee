# name: CI
# env:
#   PROJECT_NAME: app_calculator
# on:
#   push:
#     branches: master 
#   pull_request:
#     branches: master 
    
# jobs:
# #   code-style:
# #     runs-on: ubuntu-latest
# #     steps:
# #       - uses: actions/checkout@v2
# #       - name: Code Style Checker
# #         uses: andymckay/pycodestyle-action@0.1.3
# #         with: 
# #           args: pycodestyle -v 
 
# #   Test:
# #     needs: code-style
# #     runs-on: ubuntu-latest
# #     steps:
# #       - uses: actions/checkout@v2
# #       - name: Build docker test
# #         run: docker build -f Dockerfile_test -t buildbox-image . 
# #         - name: Run test
# #           run: docker run buildbox-image
  
#   build:
# #     needs: [code-style, Test]
#     runs-on: test
#     steps:
#     - uses: actions/checkout@v2
      
#     - name: Docker build
#       run: |
#         docker build -t ${{ secrets.DOCKER_LOGIN }}/$PROJECT_NAME:ver$GITHUB_RUN_NUMBER .
#         docker images
      
# #     - name: Upload to DOCKERHUB    
# #       run: |
# #         docker login --username=${{ secrets.DOCKER_LOGIN }} --password=${{ secrets.DOCKER_PASSWORD }} 
# #           docker push ${{ secrets.DOCKER_LOGIN }}/$PROJECT_NAME:ver$GITHUB_RUN_NUMBER
# #   CD:
    
# #     runs-on: test
# #     needs: build
# #     steps:
# # #     - uses: actions/checkout@v2  
# #     - name: kill old docker
# #       run: docker kill $PROJECT_NAME
# #       continue-on-error: true
      
# #     - name: run project
# #       run: docker run -d --rm --name $PROJECT_NAME -p 5000:5000 ${{ secrets.LOGIN_DOCKER }}/$PROJECT_NAME
  
# #     - name: test http://192.168.99.100:5000
# #       run: curl -IS http://192.168.99.100:5000
name: CI
env:
  PROJECT_NAME: app_calculator 
on:
  push:
    branches: master 
  pull_request:
    branches: master 
    
jobs:
  code-style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Code Style Checker
        uses: andymckay/pycodestyle-action@0.1.3
        with: 
          args: pycodestyle -v 
 
  test:
    needs: code-style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build docker test
        run: docker build -f Dockerfile_test -t ${{ secrets.DOCKER_LOGIN }}/$PROJECT_NAME:test_ver$GITHUB_RUN_NUMBER . 
      - name: Run test
        run: docker run ${{ secrets.DOCKER_LOGIN }}/$PROJECT_NAME:test_ver$GITHUB_RUN_NUMBER
  
  build:
#     needs: [code-style, test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      
    - name: Docker build
#       run: docker build -t ${{ secrets.LOGIN_DOCKER }}/$PROJECT_NAME:v$GITHUB_RUN_NUMBER .
      run: docker build -t $PROJECT_NAME .
      
#     - name: Upload to DOCKERHUB    
#       run: |
#         docker login --username=${{ secrets.LOGIN_DOCKER }} --password=${{ secrets.PASSWORD_DOCKER }}
#         docker push ${{ secrets.LOGIN_DOCKER }}/$PROJECT_NAME:v$GITHUB_RUN_NUMBER

 
